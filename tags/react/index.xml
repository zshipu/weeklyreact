<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>react on React周刊  --  知识铺</title>
    <link>https://weeklyreact.zshipu.com/tags/react/</link>
    <description>Recent content in react on React周刊  --  知识铺</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 08 Aug 2022 09:07:31 +0800</lastBuildDate>
    
	<atom:link href="https://weeklyreact.zshipu.com/tags/react/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>React周刊 - 第一期</title>
      <link>https://weeklyreact.zshipu.com/post/React%E5%91%A8%E5%88%8A-%E7%AC%AC%E4%B8%80%E6%9C%9F/</link>
      <pubDate>Mon, 08 Aug 2022 09:07:31 +0800</pubDate>
      
      <guid>https://weeklyreact.zshipu.com/post/React%E5%91%A8%E5%88%8A-%E7%AC%AC%E4%B8%80%E6%9C%9F/</guid>
      <description>React Remix 中关于服务器状态的一些思考 关于 Remix 中状态和服务器调用管理的一个有趣想法，它被设计为在客户端使用和不使用 JavaScript。它可以回退到普通的旧浏览器行为，而 JS 只是一个奖励。 在同一台服务器上运行 Next 和 Remix 一个有趣的设置，它表明我们可以在同一个 Node.js 服务器中混合使用 Remix 和 Next.js。这</description>
    </item>
    
  </channel>
</rss>